# i3 config.
#
# i3's variables aren't particularly great, e.g. you can't set a variable to a
# variable, quoting etc. is really weird and generally you can't trust them.
#
# Note: For class strings, use `xprop`.

## Local variables {{{
# set i3 config dir for includes
set $conf_dir ~/.config/i3

# modifiers (Mod4 = Win, Mod1 = Alt)
set $mod Mod4
set $alt Mod1

# for exec-ing things that don't show windows, use --no-startup-id so we don't
# get the hourglass pointer for 60 secs
set $exec_quiet exec --no-startup-id

# v - this does NOT work! - v
#set $i3_msg $exec_quiet i3-msg
set $i3_msg exec --no-startup-id i3-msg

set $mon_primary    eDP1
set $mon_secondary  VGA1

# assign numbers & labels to workspace themes
set $ws_text    1:text
set $ws_www     2:www
set $ws_comms   3:comms
set $ws_media   4:media
set $ws_cal     5:cal

set $font xos4 Terminus 10

# generic names for preferred programs
set $terminal       termite
set $terminal_class termite

set $launcher       dmenu_run

set $editor         emacs
set $editor_class   Emacs

set $browser        firefox
set $browser_class  Firefox
set $browser_alt    chromium

set $mail           claws-mail
set $calendar       evolution

set $term_irc       weechat
set $term_music     mpn
set $term_news      newsboat
## }}}

## Appearance {{{
# set font for window titles, bar (unless specified in bar {} block) etc.
font pango:$font

## Window decorations, colours {{{
# disable titlebar (personally not suggested because some titles can be helpful)
#new_window 1pixel

## Default colours {{{
# class                 border    backgrnd. text      indicator
#client.focused          "#4c7899" "#285577" "#ffffff" "#2e9ef4"
#client.focused_inactive "#333333" "#5f676a" "#ffffff" "#484e50"
#client.unfocused        "#333333" "#222222" "#888888" "#292d2e"
#client.urgent           "#2f343a" "#900000" "#ffffff" "#900000"
#client.placeholder      "#000000" "#0c0c0c" "#ffffff" "#000000"
## }}}

# (quotes not required, just for editors (Vim) to understand they're strings)
set $clr_foc_text "#dddddd"
set $clr_unfoc_text "#777777"

set $clr_foc_border "#4c6088"
set $clr_foc_bg "#2a3d5d"

set $clr_unfoc_border "#242424"
set $clr_unfoc_bg "#1a1a1a"

set $clr_inactive_border "#444444"
set $clr_inactive_bg "#353535"
set $clr_inactive_text "#cccccc"

# class                 border    backgrnd. text      indicator
client.focused          $clr_foc_border $clr_foc_bg $clr_foc_text "#4477aa"
client.focused_inactive $clr_inactive_border $clr_inactive_bg $clr_inactive_text "#333333"
client.unfocused        $clr_unfoc_border $clr_unfoc_bg $clr_unfoc_text "#292d2e"
client.urgent           "#2f343a" "#900000" $clr_foc_text "#900000"
client.placeholder      "#000000" "#0c0c0c" $clr_foc_text "#000000"
## }}}
## }}}

## Modes {{{
# keybinds may be set elsewhere (depends on the mode)
# resize mode (can also use $mod + right/left click)
set $mode_resize "resize"
mode $mode_resize {
    # grow/shrink (from top-left i.e. down, right = grow)
    # (shifted Vim keys)
    bindsym j         resize shrink width  10 px or 10 ppt
    bindsym k         resize grow   height 10 px or 10 ppt
    bindsym l         resize shrink height 10 px or 10 ppt
    bindsym semicolon resize grow   width  10 px or 10 ppt

    # grow/shrink (from top-left i.e. down, right = grow)
    # (arrow keys)
    bindsym Left  resize shrink width  10 px or 10 ppt
    bindsym Down  resize grow   height 10 px or 10 ppt
    bindsym Up    resize shrink height 10 px or 10 ppt
    bindsym Right resize grow   width  10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# no-swallow mode for (i3 in) virtual machines etc.
set $mode_no_swallow "no-swallow - $mod+Shift+Esc to exit"
mode $mode_no_swallow {
    # only one keybind: return to normal
    bindsym $mod+Shift+Escape mode "default"
}
bindsym $mod+Shift+Escape mode $mode_no_swallow
## }}}

## Keybinds {{{
## Programs {{{
# basic
bindsym $mod+Return             exec $terminal
bindsym $mod+Shift+Return       exec $browser
bindsym $mod+$alt+Shift+Return  exec $browser_alt
bindsym $mod+d                  exec $launcher

# shortcuts
bindsym $mod+Shift+a exec anki
## }}}

## Workspaces {{{
# `workspace number` refers to the workspace *beginning* with that number (it
# can be more descriptive)

# basic moving to, moving windows to
bindsym $mod+1 workspace number $ws_text
bindsym $mod+2 workspace number $ws_www
bindsym $mod+3 workspace number $ws_comms
bindsym $mod+4 workspace number $ws_media
bindsym $mod+5 workspace number $ws_cal
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

bindsym $mod+Shift+1 move container to workspace number $ws_text
bindsym $mod+Shift+2 move container to workspace number $ws_www
bindsym $mod+Shift+3 move container to workspace number $ws_comms
bindsym $mod+Shift+4 move container to workspace number $ws_media
bindsym $mod+Shift+5 move container to workspace number $ws_cal
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# switch to previous workspace
bindsym $mod+z workspace back_and_forth

# move focused container to previous workspace
bindsym $mod+Shift+z move container to workspace back_and_forth

# move workspace to another output (rolls over, so with 2 outputs=always swap)
bindsym $mod+x move workspace to output right
### }}}

## Windows {{{
# drag floating windows with $mod+mouse
floating_modifier $mod

# change focus window (shifted Vim keys)
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# change focus window (arrow keys)
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# change focus window to latest urgent window
bindsym $mod+u [urgent=latest] focus

# move focused window (shifted Vim keys)
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# move focused window (arrow keys)
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move floating window to centre of monitor
bindsym $mod+Shift+c move position center

# set to split horizontal, vertical
bindsym $mod+h split h
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows on workspace
bindsym $mod+space focus mode_toggle

# make current window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# show first/next scratchpad window
bindsym $mod+minus scratchpad show

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# kill focused window
bindsym $mod+Shift+q kill
## }}}

## i3 {{{
# reload i3 config file (i.e. this file)
bindsym $mod+Shift+r reload

# restart i3 in-place (preserves layout & session -- can be used to upgrade i3)
bindsym $mod+Control+Shift+r restart

# exit i3 (and X too)
bindsym $mod+Shift+e exit
## }}}

# mode keybinds
bindsym $mod+r mode $mode_resize

## Multimedia {{{
# set i3status full refresh command (only way)
#set $refresh killall -USR1 i3status

# set i3blocks refresh commands
set $refresh_mpd pkill -RTMIN+10 i3blocks
set $refresh_vol pkill -RTMIN+11 i3blocks

# volume multimedia keys (ALSA)
#bindsym XF86AudioRaiseVolume $exec_quiet "amixer -M set Master 1dB+ && $refresh"
#bindsym XF86AudioLowerVolume $exec_quiet "amixer -M set Master 1dB- && $refresh"
#bindsym XF86AudioMute $exec_quiet "amixer set Master toggle && $refresh"

# volume multimedia keys (PulseAudio)
bindsym XF86AudioRaiseVolume $exec_quiet "amixer set Master 2%+ && $refresh_vol"
bindsym XF86AudioLowerVolume $exec_quiet "amixer set Master 2%- && $refresh_vol"
bindsym XF86AudioMute $exec_quiet "amixer set Master toggle && $refresh_vol"

# music player keys (MPD)
# with special multimedia keys, and extra binds for keyboards missing them
bindsym $mod+XF86AudioRaiseVolume $exec_quiet "mpc volume +2 && $refresh_vol"
bindsym $mod+XF86AudioLowerVolume $exec_quiet "mpc volume -2 && $refresh_vol"
bindsym XF86AudioPlay      $exec_quiet "mpc toggle && $refresh_mpd"
bindsym XF86AudioStop      $exec_quiet "mpc stop   && $refresh_mpd"
bindsym XF86AudioPrev      $exec_quiet "mpc prev   && $refresh_mpd"
bindsym XF86AudioNext      $exec_quiet "mpc next   && $refresh_mpd"
bindsym $mod+XF86AudioPlay $exec_quiet "mpc next   && $refresh_mpd"
bindsym $mod+XF86AudioNext       $exec_quiet "mpd-insert-best"
bindsym $mod+Shift+XF86AudioPlay $exec_quiet "mpd-insert-best"
## }}}

## Screenshots {{{
# set shot options & directory
set $shot maim -n -b 2 $HOME/media/screenshots/$(date +%F_%T_shot).png

# capture currently focused window
bindsym Print $exec_quiet $shot -i $(xdotool getactivewindow)

# capture a selection
bindsym Ctrl+Print $exec_quiet $shot -s

# capture all screens together
bindsym Shift+Print $exec_quiet $shot

# custom shots
bindsym $mod+Print $exec_quiet shot-cs-manual
## }}}

### Computer {{{
# lock computer
bindsym XF86Display $exec_quiet "lock"

# lock computer & standby
bindsym $mod+F1 $exec_quiet "lockstb"

# turn off screen
bindsym $mod+F2 $exec_quiet "sleep 0.2 && xset dpms force off"

# turn off computer
bindsym $mod+Shift+Delete $exec_quiet "poweroff"
### }}}

# call simple 2 monitor all-workspace-swap script
bindsym $mod+Shift+x $exec_quiet "outswap"
## }}}

## Behaviour {{{
# enable back and forth (hitting the bindsym for your current workspace will
# switch you to your previous workspace)
#workspace_auto_back_and_forth yes

# set default output (monitor) for each workspace
# looks like workspace number doesn't work here :/
workspace $ws_text output $mon_primary
workspace $ws_www output $mon_primary
workspace $ws_comms output $mon_secondary
workspace $ws_media output $mon_secondary
workspace $ws_cal output $mon_secondary

## Automatic window assigns {{{
# pavucontrol is better floating
for_window [class="Pavucontrol"] floating enable

# make Steam float by default (so that chat windows aren't annoying)
for_window [class="Steam"] floating enable
## }}}
## }}}

## Bar {{{
bar {
    # use i3blocks
    status_command i3blocks

    # system tray on primary monitor
    tray_output primary

    # set default statusline colour
    colors {
        background "#000000"
        statusline $clr_foc_text
        #separator "#666666"

        # same colors as set & used for window titles previously
        focused_workspace $clr_foc_border $clr_foc_bg $clr_foc_text
        active_workspace $clr_inactive_border $clr_inactive_bg $clr_inactive_text
        inactive_workspace $clr_unfoc_border $clr_unfoc_bg $clr_unfoc_text
        #urgent_workspace "#2f343a" "#900000" "#ffffff"
    }
}
## }}}

## Autostarting {{{
### Applications {{{
# Things to remember:
#
#   * prefix exec with a switch to the workspace you want the program on
#   * remember to title things when required by your layouts
#   * the selected window for a workspace seems pretty hard to set -
#     the order in which you start things might have an effect, but it
#     doesn't seem reliable

# auto terminal for scratchpad
for_window [title="^scratch$"] move scratchpad
exec $terminal --title "scratch"

assign [class="$editor_class"] number $ws_text
exec $editor

assign [class="$browser_class"] number $ws_www
exec $browser

$i3_msg 'workspace number $ws_comms; exec $mail'
$i3_msg 'workspace number $ws_comms; exec $terminal --title "irc" -e $term_irc'
$i3_msg 'workspace number $ws_media; exec $terminal --title "music" -e $term_music'
$i3_msg 'workspace number $ws_media; exec $terminal --title "news" -e $term_news'
$i3_msg 'workspace number $ws_cal; exec $calendar'
### }}}

### Layouts {{{
# Note: there is no point in using a layout if a workspace has just 1
#       window
#
# Remember to prefix the layout with a change to the wanted workspace!
# Keep in mind that the last workspace to have a layout appended to it
# will probably be the active one on startup.
#
$i3_msg 'workspace number $ws_comms; append_layout "$conf_dir/workspace-comms.json"'
$i3_msg 'workspace number $ws_media; append_layout "$conf_dir/workspace-media.json"'

# try our best to make a specific workspace active on startup
$i3_msg 'workspace number $ws_text'

### }}}
## }}}
