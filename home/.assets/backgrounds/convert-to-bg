#!/usr/bin/env bash
#
# Convert an image so it is suitable for use as a GRUB background image.
# (i.e. resizes to screen resolution, makes darker so you can text on top)
#
# Requires ImageMagick and OptiPNG.
#

# For an appropriately dark but still 'nice' image, I use this rule for
# brightness and contrast:
#
#     brightness=x
#     contrast=x-10
#
# Example settings follow.
#
# Bright:
#
#     brightness=-44
#     contrast=-54
#
# Middle:
#
#     brightness=-54
#     contrast=-64
#
# Dark:
#
#     brightness=-84
#     contrast=-94
#

usage() {
    cat <<EOF
Usage: ${0##*/} [options] file
Convert an image to use as a background/wallpaper.

  Options:
    -w
    -v
    -b
    -c
    -h
EOF
}

# default options
## screen resolution
## images will be cropped and resized to this, but will keep their
## aspect ratio
w=1366
h=768

## brightness & contrast
b=-81
c=-91



while getopts "b:c:w:v:h" opt; do
    case "$opt" in
        b) # brightness
            b="$OPTARG"
            ;;
        c) # contrast
            c="$OPTARG"
            ;;
        w) # width
            w="$OPTARG"
            ;;
        v) # height (vertical, since -h used for help)
            h="$OPTARG"
            ;;
        h) # display usage message
            usage
            exit 0
            ;;
    esac
done

shift $((OPTIND-1))



if [[ $# -ne 2 ]]; then
    echo "${0##*/}: error: not exactly 2 arguments"
    exit 1
fi

if [[ ! -f "$1" ]]; then
    echo "${0##*/}: error: argument 1 not a regular file"
    exit 2
fi



if [[ $w == 0 ]] || [[ $h == 0 ]]; then
    convert "$1" -brightness-contrast "${b}x${c}" "$2"
else
    convert "$1" -brightness-contrast "${b}x${c}" -resize "${w}x${h}^" -gravity center -crop "${w}x${h}+0+0" "$2"
fi
