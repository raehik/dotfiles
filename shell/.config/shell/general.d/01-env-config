# vim: ft=sh
#
# Shell config using environment variables.
#
# Some programs don't use a config file, instead opting to be pretty stupid and
# offer environment variable-based config only. This file is for those programs.
#

# ls: colors (need to set LS_COLORS, we do dynamically via dircolors)
eval $(dircolors "$cfg_dir/dircolors")

# man: use nice colours (via exporting termcap values for less)
export LESS_TERMCAP_mb=$'\e[01;31m'
export LESS_TERMCAP_md=$'\e[01;31m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;44;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[01;32m'

export XDG_DATA_HOME="$HOME/.local/share"

# Guix: set this early so that Guix overrides it properly
export XDG_DATA_DIRS="/usr/local/share/:/usr/share/${XDG_DATA_DIRS:+:}$XDG_DATA_DIRS"

# aws-vault: use file backend (nice and simple, & works with Geodesic)
export AWS_VAULT_BACKEND="file"

# hledger: default journal file
export LEDGER_FILE="$HOME"/proj/money/ledger/main.journal

# password-store / pass: put in (X) clipboard by default, shorten clip time
export PASSWORD_STORE_CLIP_TIME=15

# Go: place in user's local
export GOPATH="$XDG_DATA_HOME/go"
export PATH="$GOPATH/bin:$PATH"

# Java: fix broken bullshit
export _JAVA_AWT_WM_NONREPARENTING=1

# Java: make sure we use anti-aliasing
export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true"

# Java: Arch doesn't set its own classpath or something? smh
export CLASSPATH=".:/usr/share/java/*"

# Python: set a directory for personal user modules
export PYTHONPATH="$HOME/.local/share/python-user"

# Ruby: initialise rbenv if present
#if command -v rbenv >/dev/null 2>&1; then
#    eval "$(rbenv init -)"
#fi

# PHP: Composer package manager
#export PATH="$HOME/.config/composer/vendor/bin:$PATH"

# Rust: cargo package manager
#export PATH="$HOME/.cargo/bin:$PATH"

# OCaml: opam package manager
#[[ -x $(which opam) ]] && eval $(opam env)

# TeX (default is ~/texmf, ew)
export TEXMFHOME='~/.local/share/tex'

# Haskell: ghcup
[[ -f "$HOME"/.ghcup/env ]] && source "$HOME"/.ghcup/env
