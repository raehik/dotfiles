# vim: ft=zsh
#
# zsh-specific shell configuration.
#

for f in "$cfg_dir"/zsh.d/*; do source "$f"; done

# Vi[m]-style command-line editing
bindkey -v

# Allow comments in interactive mode.
#
#     $ #command to run when I remember syntax
#     $ do this # but not this
#
# You can comment out a line by hitting Alt-#. This inserts a pound sign '#' at
# the start of the line (making the line a comment) and runs the command. To run
# the command for realsies, scroll through your command history and hit Alt-# on
# the commented-out line: it removes the '#' and runs the command!
setopt interactivecomments

## Command history configuration {{{
# file name
HISTFILE="${XDG_CACHE_HOME:-$HOME/.cache}/zsh_history"

# ???
# for setting max no. of commands in history file
HISTSIZE=10000
SAVEHIST=$HISTSIZE

# don't record duplicate lines or lines beginning with a space
# (same as bash HISTCONTROL=ignoreboth)
setopt hist_ignore_dups
setopt hist_ignore_space

# append to history every command
setopt inc_append_history

# actually share the history, between concurrent sessions
setopt share_history

# going up through history scrolls through previous commands starting
# with what you've typed so far
#autoload up-line-or-beginning-search
#autoload down-line-or-beginning-search
#zle -N up-line-or-beginning-search
#zle -N down-line-or-beginning-search
#bindkey "^[[A" up-line-or-beginning-search
#bindkey "^[[B" down-line-or-beginning-search

bindkey '^R' history-incremental-search-backward

# by default, history only outputs the last 16 commands
# wtf that is freaking useless no thx
alias history="history 0"
## }}}

# don't do that dumb query before `rm path/*`
setopt rm_star_silent

# make sure no system-wide files have set 'Ctrl-D doesn't exit' option
unsetopt ignoreeof

# set a custom 'zsh: command not found: $0' message
# args are the command args
#command_not_found_handler() {
#    echo "ayy lmao"
#}

# enable direnv: must be at end (according to docs)
eval "$(direnv hook zsh)"
